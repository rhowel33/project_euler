"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

"""
import numpy as np

# create a list with the first two fib nums
fib_nums = [1, 2]

# create a temporary value for i and iterate through the fib sequence
i = 0
while i < 4_000_000:
    fib_nums.append(fib_nums[-1] + fib_nums[-2])
    i = fib_nums[-1]

# make the list into an array and drop the last value, as it is over 4_000_000
fib_nums = np.array(fib_nums)

evens = fib_nums[fib_nums % 2 == 0]

print(evens.sum())